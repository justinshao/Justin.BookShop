@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="mini-toolbar" style="text-align: center; line-height: 30px;" borderstyle="border:0;">
    <label>名称：</label>
    <input id="key" class="mini-textbox" style="width: 150px;" onenter="onKeyEnter" />
    <a class="mini-button" style="width: 60px;" onclick="search()">查询</a>
</div>

<div class="mini-fit">
    <div id="permissionTree" class="mini-treegrid" width="100%" style=" height: 500px;" showtreeicon="true" onload="load"
     treecolumn="colName" idfield="ID" parentfield="ParentID" resultastree="false"
    allowresize="true" expandonload="true" multiselect="true" ondrawcell="drawCell" showCheckBox="true">
    <div property="columns">
        <div name="colName" field="Name" width="150">名称</div>
        <div field="TypeID" width="50">类型</div>
        <div field="Description" width="160">描述</div>
    </div>
</div>
</div>
<div class="mini-toolbar" style="text-align: center; padding-top: 8px; padding-bottom: 8px;" borderstyle="border:0;">
    <a class="mini-button" style="width: 60px;" onclick="onOk()">确定</a>
    <span style="display: inline-block; width: 25px;"></span>
    <a class="mini-button" style="width: 60px;" onclick="onCancel()">取消</a>
</div>

<script type="text/javascript">
    var tree = null;
    var typeData = [{ TypeID: 0, TypeName: '菜单' }, { TypeID: 1, TypeName: '通用' }];
    var selectedIDs = @(ViewBag.SelectedPermsIDs + ";")

    $(function () {
        mini.parse();
        tree = mini.get("permissionTree");

        tree.load("/admin/permsmanage/list");
    });

    function drawCell(e) {
        switch (e.field) {
            case "TypeID": {
                e.cellHtml = typeData[e.value].TypeName;
                break;
            }
        }
    }

    function load(e) {
        if (!selectedIDs || selectedIDs.length <= 0)
            return;

        var nodes = tree.findNodes(function (node) {
            if (selectedIDs.indexOf(node.ID) >= 0) return true;
        });
        for (var i = 0; i < nodes.length; i++) {
            tree.checkNode(nodes[i])
        }
    }

    function loadnode(e) {
        if (!selectedIDs || selectedIDs.length <= 0)
            return;

        if (selectedIDs.indexOf(e.node.ID) >= 0)
            tree.checkNode(e.node);
    }

    function GetData() {
        var nodes = tree.getCheckedNodes(false);
        return nodes;
    }
    function search() {
        var key = mini.get("key").getValue();
        tree.load({ key: "name-" + key });
    }
    function onKeyEnter(e) {
        search();
    }
    function onRowDblClick(e) {
        onOk();
    }
    //////////////////////////////////
    function CloseWindow(action) {
        if (action == "ok") {
            var ids = [];
            var selectedNodes = tree.getCheckedNodes(true);
            for (var i = 0; i < selectedNodes.length; i++) {
                ids.push(selectedNodes[i].ID);
            }

            $.ajax({
                url: "/Admin/RolePerms/AuthorizePermission?roleID=" + "@ViewBag.RoleID",
                type: "post",
                contentType: "application/json;",
                data: JSON.stringify(ids),
                success: function (result) {
                    if (result.Success) {
                        showTip("保存成功！", "success");

                        if (window.CloseOwnerWindow) return window.CloseOwnerWindow(action);
                        else window.close();
                    } else {
                        mini.alert("<b>数据保存失败！</b><br>错误信息：" + result.ErrorMessage);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    mini.alert("<b>出现错误！</b><br/>" +
                            "错误信息：" + errorThrown, +
                            "<br/>状态码：" + textStatus);
                }
            });
        } else {
            if (window.CloseOwnerWindow) return window.CloseOwnerWindow(action);
            else window.close();
        }
    }

    function onOk() {
        CloseWindow("ok");
    }
    function onCancel() {
        CloseWindow("cancel");
    }
    function showTip(content, state) {
        mini.showTips({
            content: content,
            state: state,
            x: "Center",
            y: "Center",
            timeout: 2000
        });
    }

</script>

